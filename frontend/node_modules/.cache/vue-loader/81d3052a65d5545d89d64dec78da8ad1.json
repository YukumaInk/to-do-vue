{"remainingRequest":"/home/yuji/Desktop/TreinoVue/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yuji/Desktop/TreinoVue/todo/src/components/ToDoInput.vue?vue&type=style&index=0&id=d92eadf8&scoped=true&lang=css&","dependencies":[{"path":"/home/yuji/Desktop/TreinoVue/todo/src/components/ToDoInput.vue","mtime":1589407925899},{"path":"/home/yuji/Desktop/TreinoVue/todo/node_modules/css-loader/dist/cjs.js","mtime":1588966541731},{"path":"/home/yuji/Desktop/TreinoVue/todo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1588966541909},{"path":"/home/yuji/Desktop/TreinoVue/todo/node_modules/postcss-loader/src/index.js","mtime":1588966541873},{"path":"/home/yuji/Desktop/TreinoVue/todo/node_modules/cache-loader/dist/cjs.js","mtime":1588966540047},{"path":"/home/yuji/Desktop/TreinoVue/todo/node_modules/vue-loader/lib/index.js","mtime":1588966541909}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiA0MHB4IDAgMDsKfQp1bCB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQojYm94ewogICAgd2lkdGg6NDQwcHg7CiAgICBoZWlnaHQ6IDMwcHg7CiAgICBib3JkZXItcmFkaXVzOiA1cHggMCAwIDVweDsKICAgIGJvcmRlcjpzb2xpZCAxcHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KI2J1dHRvbkJveHsKICAgIGhlaWdodDogMzRweDsKICAgIHdpZHRoOiA0MHB4OwogICAgYm9yZGVyLXJhZGl1czogMCA1cHggNXB4IDA7CiAgICBib3JkZXI6IHNvbGlkIDFweDsKfQo="},{"version":3,"sources":["ToDoInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDoInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"todoList\">\n    <input id=\"box\" type=\"text\" v-model=\"textBox\" @keypress.enter=\"addToDo()\" >\n    <input id=\"buttonBox\" type=\"button\" value=\"+\" @click=\"addToDo()\" >\n  </div>\n</template>\n\n<script>\nimport Axios from 'axios'\n\nexport default {\n  name: 'ToDoInput',\n  props: {\n      refreshList: Function,\n  },\n  data(){\n      return{\n          textBox:\"\"\n      }\n  },\n  methods: {\n    async addToDo(){\n        await Axios.post('http://localhost:3030/todo', { \"name\":this.textBox })\n        this.refreshList()\n        this.textBox = \"\"\n    },\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n#box{\n    width:440px;\n    height: 30px;\n    border-radius: 5px 0 0 5px;\n    border:solid 1px;\n    text-align: center;\n}\n#buttonBox{\n    height: 34px;\n    width: 40px;\n    border-radius: 0 5px 5px 0;\n    border: solid 1px;\n}\n</style>\n"]}]}